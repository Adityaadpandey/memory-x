datasource db {
    // could be postgresql or mysql
    provider = "postgresql"
    url      = "postgresql://myuser:mypassword@localhost:5432/memory_x"
}

generator db {
    provider = "go run github.com/steebchen/prisma-client-go"
}

model User {
    id         String      @id @default(uuid())
    name       String
    email      String      @unique
    password   String?
    workspaces Workspace[] @relation("UserWorkspaces")
    stories    Story[]
    createdAt  DateTime    @default(now())
    updatedAt  DateTime    @updatedAt
}

model Workspace {
    id          String   @id @default(uuid())
    name        String
    description String?
    users       User[]   @relation("UserWorkspaces")
    caption     String?
    images      Image[]  @relation("WorkspaceImages")
    stories     Story[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Image {
    id          String  @id @default(uuid())
    url         String
    storyId     String?
    workspaceId String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Story     Story?     @relation("StoryImages", fields: [storyId], references: [id], onDelete: SetNull)
    Workspace Workspace? @relation("WorkspaceImages", fields: [workspaceId], references: [id], onDelete: SetNull)
    captions  Caption[]
}

model Caption {
    id      String @id @default(uuid())
    text    String
    imageId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Image Image @relation(fields: [imageId], references: [id], onDelete: Cascade)
}

model Story {
    id          String  @id @default(uuid())
    title       String
    description String?
    workspaceId String
    userId      String
    caption     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    images    Image[]   @relation("StoryImages")
    User      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    Workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

    @@index([workspaceId])
    @@index([userId])
}
